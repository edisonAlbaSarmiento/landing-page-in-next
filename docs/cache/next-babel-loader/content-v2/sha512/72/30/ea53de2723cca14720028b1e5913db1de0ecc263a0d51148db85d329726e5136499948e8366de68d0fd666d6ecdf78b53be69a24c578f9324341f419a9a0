{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/edisonalba/Documents/landing-page-in-next/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/edisonalba/Documents/landing-page-in-next/src/components/organisms/addEventBanner/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, TextFieldComponent, ButtonComponent } from 'components/atoms';\nvar useStyle = makeStyles(function (theme) {\n  return {};\n});\n\nvar AddEventBanner = function AddEventBanner(props) {\n  _s();\n\n  var validate = {\n    props: props\n  };\n  var style = useStyle();\n\n  var _useState = useState({\n    title: false,\n    date: false,\n    type: false\n  }),\n      fieldToValidate = _useState[0],\n      setFieldValidation = _useState[1];\n\n  var _useState2 = useState({\n    title: '',\n    description: '',\n    date: '',\n    type: ''\n  }),\n      inputFieldValue = _useState2[0],\n      setFieldValue = _useState2[1];\n\n  var validateField = useCallback(function (field) {\n    var input = inputFieldValue[field];\n    var currentValidationState = fieldToValidate;\n\n    if (input === null || input === '') {\n      currentValidationState[field] = true;\n    } else {\n      currentValidationState[field] = false;\n    }\n\n    setFieldValidation(_objectSpread({}, currentValidationState));\n    return !currentValidationState[field];\n  }, [inputFieldValue, fieldToValidate, setFieldValidation]);\n  var isValid = useCallback(function () {\n    var validationStatus = true;\n    Object.keys(fieldToValidate).map(function (key, value) {\n      validationStatus = validationStatus && validateField(key);\n      console.log(validationStatus);\n    });\n    return validationStatus;\n  }, [fieldToValidate, validateField]);\n  var handleFieldChange = useCallback(function (field, value) {\n    var currentValidationState = fieldToValidate;\n    currentValidationState[field] = false;\n    setFieldValidation(_objectSpread({}, currentValidationState));\n    var currentFieldValues = inputFieldValue;\n    currentFieldValues[field] = value;\n    setFieldValue(_objectSpread({}, currentFieldValues));\n  }, [fieldToValidate, inputFieldValue, setFieldValidation, setFieldValue]);\n  var handleSubmit = useCallback(function () {\n    if (!props.validate || props.validate && isValid()) {\n      props.onSubmit(inputFieldValue);\n    }\n  }, [isValid]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: Container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"header\",\n          children: \"Add New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n          required: true,\n          label: \"Title\",\n          onChange: function onChange(event) {\n            return handleFieldChange('title', event.target.value);\n          },\n          error: fieldToValidate.title,\n          onBlur: function onBlur() {\n            return validate && validateField('title');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n          label: \"Description\",\n          onChange: function onChange(event) {\n            return handleFieldChange('description', event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n          required: true,\n          label: \"Date and Time\",\n          onChange: function onChange(event) {\n            return handleFieldChange('date', event.target.value);\n          },\n          type: \"datetime-local\",\n          error: fieldToValidate.date,\n          onBlur: function onBlur() {\n            return validate && validateField('date');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n          required: true,\n          label: \"Event Type\",\n          onChange: function onChange(event) {\n            return handleFieldChange('type', event.target.value);\n          },\n          error: fieldToValidate.type,\n          onBlur: function onBlur() {\n            return validate && validateField('type');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n          title: \"Add Event\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddEventBanner, \"F3aay9G1XaTKdwTQxBAuSFnGMVI=\", false, function () {\n  return [useStyle];\n});\n\n_c = AddEventBanner;\nAddEventBanner.propTypes = {\n  validate: PropTypes.bool,\n  onSubmit: PropTypes.func\n};\nAddEventBanner.defaultProps = {\n  validate: false\n};\nexport default AddEventBanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventBanner\");","map":{"version":3,"sources":["/Users/edisonalba/Documents/landing-page-in-next/src/components/organisms/addEventBanner/index.js"],"names":["React","useCallback","useState","PropTypes","makeStyles","Container","Box","Grid","Typography","TextFieldComponent","ButtonComponent","useStyle","theme","AddEventBanner","props","validate","style","title","date","type","fieldToValidate","setFieldValidation","description","inputFieldValue","setFieldValue","validateField","field","input","currentValidationState","isValid","validationStatus","Object","keys","map","key","value","console","log","handleFieldChange","currentFieldValues","handleSubmit","onSubmit","event","target","propTypes","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n  Typography,\n  TextFieldComponent,\n  ButtonComponent,\n} from 'components/atoms';\n\nconst useStyle = makeStyles((theme) => ({}));\n\nconst AddEventBanner = (props) => {\n  const validate = { props };\n  const style = useStyle();\n\n  const [fieldToValidate, setFieldValidation] = useState({\n    title: false,\n    date: false,\n    type: false,\n  });\n\n  const [inputFieldValue, setFieldValue] = useState({\n    title: '',\n    description: '',\n    date: '',\n    type: '',\n  });\n\n  const validateField = useCallback(\n    (field) => {\n      const input = inputFieldValue[field];\n      const currentValidationState = fieldToValidate;\n      if (input === null || input === '') {\n        currentValidationState[field] = true;\n      } else {\n        currentValidationState[field] = false;\n      }\n      setFieldValidation({ ...currentValidationState });\n      return !currentValidationState[field];\n    },\n    [inputFieldValue, fieldToValidate, setFieldValidation]\n  );\n\n  const isValid = useCallback(() => {\n    let validationStatus = true;\n    Object.keys(fieldToValidate).map((key, value) => {\n      validationStatus = validationStatus && validateField(key);\n      console.log(validationStatus);\n    });\n    return validationStatus;\n  }, [fieldToValidate, validateField]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const currentValidationState = fieldToValidate;\n      currentValidationState[field] = false;\n      setFieldValidation({ ...currentValidationState });\n\n      const currentFieldValues = inputFieldValue;\n      currentFieldValues[field] = value;\n      setFieldValue({ ...currentFieldValues });\n    },\n    [fieldToValidate, inputFieldValue, setFieldValidation, setFieldValue]\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (!props.validate || (props.validate && isValid())) {\n      props.onSubmit(inputFieldValue);\n    }\n  }, [isValid]);\n\n  return (\n    <Box component={Container}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Typography variant=\"header\">Add New Event</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextFieldComponent\n            required\n            label=\"Title\"\n            onChange={(event) => handleFieldChange('title', event.target.value)}\n            error={fieldToValidate.title}\n            onBlur={() => validate && validateField('title')}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextFieldComponent\n            label=\"Description\"\n            onChange={(event) =>\n              handleFieldChange('description', event.target.value)\n            }\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextFieldComponent\n            required\n            label=\"Date and Time\"\n            onChange={(event) => handleFieldChange('date', event.target.value)}\n            type=\"datetime-local\"\n            error={fieldToValidate.date}\n            onBlur={() => validate && validateField('date')}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextFieldComponent\n            required\n            label=\"Event Type\"\n            onChange={(event) => handleFieldChange('type', event.target.value)}\n            error={fieldToValidate.type}\n            onBlur={() => validate && validateField('type')}\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"center\">\n          <ButtonComponent title=\"Add Event\" onClick={handleSubmit} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nAddEventBanner.propTypes = {\n  validate: PropTypes.bool,\n  onSubmit: PropTypes.func,\n};\n\nAddEventBanner.defaultProps = {\n  validate: false,\n};\n\nexport default AddEventBanner;\n"]},"metadata":{},"sourceType":"module"}