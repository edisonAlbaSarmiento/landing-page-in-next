{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edisonalba/Documents/landing-page-in-next/src/components/atoms/buttomContact/index.js\",\n    _this = this;\n\nimport PropTypes from 'prop-types';\nimport { Button } from './styles';\n\nvar ButtonContact = function ButtonContact(props) {\n  var widthButton = props.widthButton,\n      heightButtom = props.heightButtom,\n      disabled = props.disabled,\n      onClick = props.onClick,\n      fontSize = props.fontSize,\n      color = props.color,\n      backgroundColorButton = props.backgroundColorButton,\n      borderColor = props.borderColor,\n      isSelect = props.isSelect,\n      borderRadius = props.borderRadius,\n      title = props.title;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    disabled: disabled,\n    onClick: onClick,\n    widthButton: widthButton,\n    heightButtom: heightButtom,\n    fontSize: fontSize,\n    backgroundColorButton: backgroundColorButton,\n    color: color,\n    borderColor: borderColor,\n    isSelect: isSelect,\n    borderRadius: borderRadius,\n    title: title ? 0 : 1,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ButtonContact;\nButtonContact.defaultProps = {\n  disabled: false,\n  color: 'white',\n  fontSize: '16px',\n  textButtom: 'Test title',\n  backgroundColorButton: 'transparent',\n  borderColor: 'white',\n  isSelect: false,\n  borderRadius: '5px',\n  title: false\n};\nButtonContact.propTypes = {\n  title: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  widthButton: PropTypes.string,\n  heightButtom: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.string,\n  backgroundColorButton: PropTypes.string,\n  borderColor: PropTypes.string,\n  isSelect: PropTypes.bool,\n  borderRadius: PropTypes.string\n};\nexport default ButtonContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonContact\");","map":{"version":3,"sources":["/Users/edisonalba/Documents/landing-page-in-next/src/components/atoms/buttomContact/index.js"],"names":["PropTypes","Button","ButtonContact","props","widthButton","heightButtom","disabled","onClick","fontSize","color","backgroundColorButton","borderColor","isSelect","borderRadius","title","children","defaultProps","textButtom","propTypes","bool","func","string"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MAE7BC,WAF6B,GAa3BD,KAb2B,CAE7BC,WAF6B;AAAA,MAG7BC,YAH6B,GAa3BF,KAb2B,CAG7BE,YAH6B;AAAA,MAI7BC,QAJ6B,GAa3BH,KAb2B,CAI7BG,QAJ6B;AAAA,MAK7BC,OAL6B,GAa3BJ,KAb2B,CAK7BI,OAL6B;AAAA,MAM7BC,QAN6B,GAa3BL,KAb2B,CAM7BK,QAN6B;AAAA,MAO7BC,KAP6B,GAa3BN,KAb2B,CAO7BM,KAP6B;AAAA,MAQ7BC,qBAR6B,GAa3BP,KAb2B,CAQ7BO,qBAR6B;AAAA,MAS7BC,WAT6B,GAa3BR,KAb2B,CAS7BQ,WAT6B;AAAA,MAU7BC,QAV6B,GAa3BT,KAb2B,CAU7BS,QAV6B;AAAA,MAW7BC,YAX6B,GAa3BV,KAb2B,CAW7BU,YAX6B;AAAA,MAY7BC,KAZ6B,GAa3BX,KAb2B,CAY7BW,KAZ6B;AAc/B,sBACE,QAAC,MAAD;AACE,IAAA,QAAQ,EAAER,QADZ;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,WAAW,EAAEH,WAHf;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAME,IAAA,qBAAqB,EAAEE,qBANzB;AAOE,IAAA,KAAK,EAAED,KAPT;AAQE,IAAA,WAAW,EAAEE,WARf;AASE,IAAA,QAAQ,EAAEC,QATZ;AAUE,IAAA,YAAY,EAAEC,YAVhB;AAWE,IAAA,KAAK,EAAEC,KAAK,GAAG,CAAH,GAAO,CAXrB;AAAA,cAaGX,KAAK,CAACY;AAbT;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CA/BD;;KAAMb,a;AAiCNA,aAAa,CAACc,YAAd,GAA6B;AAC3BV,EAAAA,QAAQ,EAAE,KADiB;AAE3BG,EAAAA,KAAK,EAAE,OAFoB;AAG3BD,EAAAA,QAAQ,EAAE,MAHiB;AAI3BS,EAAAA,UAAU,EAAE,YAJe;AAK3BP,EAAAA,qBAAqB,EAAE,aALI;AAM3BC,EAAAA,WAAW,EAAE,OANc;AAO3BC,EAAAA,QAAQ,EAAE,KAPiB;AAQ3BC,EAAAA,YAAY,EAAE,KARa;AAS3BC,EAAAA,KAAK,EAAE;AAToB,CAA7B;AAYAZ,aAAa,CAACgB,SAAd,GAA0B;AACxBJ,EAAAA,KAAK,EAAEd,SAAS,CAACmB,IADO;AAExBb,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,IAFI;AAGxBZ,EAAAA,OAAO,EAAEP,SAAS,CAACoB,IAHK;AAIxBhB,EAAAA,WAAW,EAAEJ,SAAS,CAACqB,MAJC;AAKxBhB,EAAAA,YAAY,EAAEL,SAAS,CAACqB,MALA;AAMxBZ,EAAAA,KAAK,EAAET,SAAS,CAACqB,MANO;AAOxBb,EAAAA,QAAQ,EAAER,SAAS,CAACqB,MAPI;AAQxBX,EAAAA,qBAAqB,EAAEV,SAAS,CAACqB,MART;AASxBV,EAAAA,WAAW,EAAEX,SAAS,CAACqB,MATC;AAUxBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IAVI;AAWxBN,EAAAA,YAAY,EAAEb,SAAS,CAACqB;AAXA,CAA1B;AAcA,eAAenB,aAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Button } from './styles';\n\nconst ButtonContact = (props) => {\n  const {\n    widthButton,\n    heightButtom,\n    disabled,\n    onClick,\n    fontSize,\n    color,\n    backgroundColorButton,\n    borderColor,\n    isSelect,\n    borderRadius,\n    title,\n  } = props;\n  return (\n    <Button\n      disabled={disabled}\n      onClick={onClick}\n      widthButton={widthButton}\n      heightButtom={heightButtom}\n      fontSize={fontSize}\n      backgroundColorButton={backgroundColorButton}\n      color={color}\n      borderColor={borderColor}\n      isSelect={isSelect}\n      borderRadius={borderRadius}\n      title={title ? 0 : 1}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nButtonContact.defaultProps = {\n  disabled: false,\n  color: 'white',\n  fontSize: '16px',\n  textButtom: 'Test title',\n  backgroundColorButton: 'transparent',\n  borderColor: 'white',\n  isSelect: false,\n  borderRadius: '5px',\n  title: false,\n};\n\nButtonContact.propTypes = {\n  title: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  widthButton: PropTypes.string,\n  heightButtom: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.string,\n  backgroundColorButton: PropTypes.string,\n  borderColor: PropTypes.string,\n  isSelect: PropTypes.bool,\n  borderRadius: PropTypes.string,\n};\n\nexport default ButtonContact;\n"]},"metadata":{},"sourceType":"module"}