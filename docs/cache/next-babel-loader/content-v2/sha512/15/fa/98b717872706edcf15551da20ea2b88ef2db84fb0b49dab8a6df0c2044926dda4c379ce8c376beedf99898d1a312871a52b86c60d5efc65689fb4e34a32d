{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/edisonalba/Documents/landing-page-in-next/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, TextFieldComponent, ButtonComponent } from 'components/atoms';\nvar useStyle = makeStyles(function (theme) {\n  return {};\n});\n\nvar AddEventBanner = function AddEventBanner(props) {\n  var validate = {\n    props: props\n  };\n  var style = useStyle();\n\n  var _useState = useState({\n    title: false,\n    date: false,\n    type: false\n  }),\n      fieldToValidate = _useState[0],\n      setFieldValidation = _useState[1];\n\n  var _useState2 = useState({\n    title: '',\n    description: '',\n    date: '',\n    type: ''\n  }),\n      inputFieldValue = _useState2[0],\n      setFieldValue = _useState2[1];\n\n  var validateField = useCallback(function (field) {\n    var input = inputFieldValue[field];\n    var currentValidationState = fieldToValidate;\n\n    if (input === null || input === '') {\n      currentValidationState[field] = true;\n    } else {\n      currentValidationState[field] = false;\n    }\n\n    setFieldValidation(_objectSpread({}, currentValidationState));\n    return !currentValidationState[field];\n  }, [inputFieldValue, fieldToValidate, setFieldValidation]);\n  var isValid = useCallback(function () {\n    var validationStatus = true;\n    Object.keys(fieldToValidate).map(function (key, value) {\n      validationStatus = validationStatus && validateField(key);\n      console.log(validationStatus);\n    });\n    return validationStatus;\n  }, [fieldToValidate, validateField]);\n  var handleFieldChange = useCallback(function (field, value) {\n    var currentValidationState = fieldToValidate;\n    currentValidationState[field] = false;\n    setFieldValidation(_objectSpread({}, currentValidationState));\n    var currentFieldValues = inputFieldValue;\n    currentFieldValues[field] = value;\n    setFieldValue(_objectSpread({}, currentFieldValues));\n  }, [fieldToValidate, inputFieldValue, setFieldValidation, setFieldValue]);\n  var handleSubmit = useCallback(function () {\n    if (!props.validate || props.validate && isValid()) {\n      props.onSubmit(inputFieldValue);\n    }\n  }, [isValid]);\n  return /*#__PURE__*/_jsx(Box, {\n    component: Container,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"header\",\n          children: \"Add New Event\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(TextFieldComponent, {\n          required: true,\n          label: \"Title\",\n          onChange: function onChange(event) {\n            return handleFieldChange('title', event.target.value);\n          },\n          error: fieldToValidate.title,\n          onBlur: function onBlur() {\n            return validate && validateField('title');\n          }\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(TextFieldComponent, {\n          label: \"Description\",\n          onChange: function onChange(event) {\n            return handleFieldChange('description', event.target.value);\n          }\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsx(TextFieldComponent, {\n          required: true,\n          label: \"Date and Time\",\n          onChange: function onChange(event) {\n            return handleFieldChange('date', event.target.value);\n          },\n          type: \"datetime-local\",\n          error: fieldToValidate.date,\n          onBlur: function onBlur() {\n            return validate && validateField('date');\n          }\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsx(TextFieldComponent, {\n          required: true,\n          label: \"Event Type\",\n          onChange: function onChange(event) {\n            return handleFieldChange('type', event.target.value);\n          },\n          error: fieldToValidate.type,\n          onBlur: function onBlur() {\n            return validate && validateField('type');\n          }\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsx(ButtonComponent, {\n          title: \"Add Event\",\n          onClick: handleSubmit\n        })\n      })]\n    })\n  });\n};\n\nAddEventBanner.defaultProps = {\n  validate: false\n};\nexport default AddEventBanner;","map":null,"metadata":{},"sourceType":"module"}